{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/LichessClient\/documentation\/LichessClient\/Streaming\/ndjsonStream(from:as:decoder:)"},"hierarchy":{"paths":[["doc:\/\/LichessClient\/documentation\/LichessClient","doc:\/\/LichessClient\/documentation\/LichessClient\/Streaming"]]},"kind":"symbol","metadata":{"role":"symbol","title":"ndjsonStream(from:as:decoder:)","externalID":"s:13LichessClient9StreamingO12ndjsonStream4from2as7decoderScsyxs5Error_pG14OpenAPIRuntime8HTTPBodyC_xm10Foundation11JSONDecoderCtSeRzlFZ","symbolKind":"method","modules":[{"name":"LichessClient"}],"roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ndjsonStream","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPBody","preciseIdentifier":"s:14OpenAPIRuntime8HTTPBodyC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Scs","text":"AsyncThrowingStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Decode an HTTPBody containing Newline-Delimited JSON (NDJSON) into a typed AsyncThrowingStream."},{"type":"text","text":" "},{"type":"text","text":"The returned stream supports cancellation; cancelling the consumer task cancels the decoding task."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ndjsonStream","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"HTTPBody","preciseIdentifier":"s:14OpenAPIRuntime8HTTPBodyC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type = T.self, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":" = .init()) -> ","kind":"text"},{"text":"AsyncThrowingStream","preciseIdentifier":"s:Scs","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/lichessclient\/streaming\/ndjsonstream(from:as:decoder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://LichessClient/documentation/LichessClient/Streaming/ndjsonStream(from:as:decoder:)":{"kind":"symbol","title":"ndjsonStream(from:as:decoder:)","identifier":"doc:\/\/LichessClient\/documentation\/LichessClient\/Streaming\/ndjsonStream(from:as:decoder:)","abstract":[{"text":"Decode an HTTPBody containing Newline-Delimited JSON (NDJSON) into a typed AsyncThrowingStream.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The returned stream supports cancellation; cancelling the consumer task cancels the decoding task."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ndjsonStream","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14OpenAPIRuntime8HTTPBodyC","text":"HTTPBody","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Scs","kind":"typeIdentifier","text":"AsyncThrowingStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/lichessclient\/streaming\/ndjsonstream(from:as:decoder:)","role":"symbol"},"doc://LichessClient/documentation/LichessClient/Streaming":{"type":"topic","role":"symbol","identifier":"doc:\/\/LichessClient\/documentation\/LichessClient\/Streaming","abstract":[],"title":"Streaming","kind":"symbol","navigatorTitle":[{"text":"Streaming","kind":"identifier"}],"url":"\/documentation\/lichessclient\/streaming","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Streaming","kind":"identifier"}]},"doc://LichessClient/documentation/LichessClient":{"kind":"symbol","identifier":"doc:\/\/LichessClient\/documentation\/LichessClient","url":"\/documentation\/lichessclient","type":"topic","title":"LichessClient","abstract":[],"role":"collection"}}}